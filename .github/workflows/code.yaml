name: Code

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

permissions:
  contents: read

concurrency:
  group: ${{ format('{0}-{1}', github.workflow, github.head_ref) }}
  cancel-in-progress: true

env:
  GO: "1.24"
  MONGO_USERNAME: "admin"
  MONGO_PASSWORD: "adminpass"

jobs:
  UnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2 # immutable action

      - name: Install Go
        uses: actions/setup-go@v5.3.0 # immutable action
        with:
          go-version: ${{ env.GO }}

      - name: Build and Run MongoDB
        run: make run-docker
        env:
          SLEEP: 10

      - name: Run Unit Tests
        env:
          MONGO_URI: "mongodb://${{ env.MONGO_USERNAME }}:${{ env.MONGO_PASSWORD }}@127.0.0.1:27888/?authSource=admin&directConnection=true"
        run: go test -race -cover -coverprofile=coverage.out -covermode=atomic

      - name: Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  GolangCI-Lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2 # immutable action

      - name: Install Go
        uses: actions/setup-go@v5.3.0 # immutable action
        with:
          go-version: ${{ env.GO }}

      - name: Run GolangCi-Lint
        uses: golangci/golangci-lint-action@2226d7cb06a077cd73e56eedd38eecad18e5d837 # v6.5.0
        with:
          version: latest

  Mocks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2 # immutable action

      - name: Install Go
        uses: actions/setup-go@v5.3.0 # immutable action
        with:
          go-version: ${{ env.GO }}

      - name: Run tidy
        run: go mod tidy

      - name: Generate mocks
        run: go generate

      - name: Checking Git
        run: |
          DELTA="$(git status --short)"
          if [ -n "${DELTA}" ]
          then
            echo "::error title=Mocks are outdated::Please generate the mocks by running 'go generate'"
            git status
            exit 1
          fi
